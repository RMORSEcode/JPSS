dates.8d$Y1=substr(test[,2], 1,4) #YYYY
dates.8d$Y2=substr(test[,2], 5,6) #MM
dates.8d$Y3=substr(test[,2], 7,8) #DD
dates.8d$F1=paste(dates.8d[,1], dates.8d[,2], dates.8d[,3], sep='-')
dates.8d$F2=paste(dates.8d[,4], dates.8d[,5], dates.8d[,6], sep='-')
dates.8d$DOY1=as.numeric(strftime(dates.8d$F1, '%j'))
dates.8d$DOY2=as.numeric(strftime(dates.8d$F2, '%j'))
## add week of year (should be 46 per year for 8-day files)
table(dates.8d$X1)
dates.8d$week=c(seq(from=31, to=46, by=1),  rep(seq(from=1, to=46, by=1), 21), seq(from=1, to=23, by=1))
### create raster stacks of data
chl.av.8d=nc2raster(files.chl1.av[,1], 'CHL1_mean')
chl.gsm.8d=nc2raster(files.chl1.gsm[,1], 'CHL1_mean')
chl.oc5.8d=nc2raster(files.oc5[,1], 'CHL-OC5_mean')
#testing
plotChlRaster(chl.av.8d, 5, 5, limit=T, av.dates.8d)
#testing
plotChlRaster(chl.av.8d, 5, 45, limit=T, av.dates.8d)
#testing
plotChlRaster(chl.av.8d, 5, 4, limit=T, av.dates.8d)
#testing
plotChlRaster(chl.av.8d, 5, 7, limit=T, av.dates.8d)
#testing
plotChlRaster(chl.av.8d, 5, 17, limit=T, av.dates.8d)
#testing
plotChlRaster(chl.av.8d, 5, 27, limit=T, av.dates.8d)
#testing
plotChlRaster(chl.av.8d, 5, 7, limit=T, av.dates.8d)
### get calibration Chl from WOD
d2='C:/Users/ryan.morse/Documents/GitHub/JPSS/calibration/WOD'
ncfiles=list.files(path=d2, pattern='.nc')
nc.str=strsplit(ncfiles, '.nc')
i=1 #CTD hi res
nc1=nc_open(ncfiles[i])
nncfiles
ncfiles
nc_close(nc1)
rm(nc1)
ncfiles[i]
nc1=nc_open(ncfiles[i])
wod.chl=ncvar_get(nc1, 'Chlorophyll')
ncfiles=list.files(path=d2, pattern='.nc')
nc.str=strsplit(ncfiles, '.nc')
setwd(d2)
nc1=nc_open(ncfiles[i])
wod.chl=ncvar_get(nc1, 'Chlorophyll')
wod.lat=ncvar_get(nc1, 'lat')
wod.lon=ncvar_get(nc1, 'lon')
wod.time=ncvar_get(nc1, 'time') #days since Jan 1, 1770
wod.z=ncvar_get(nc1, 'z')
nc1$var$time$units
## WOD CTD samples, surface depth
wod.chl.df=data.frame(wod.chl[which(wod.z==0)], wod.lon, wod.lat, wod.z[which(wod.z==0)], wod.time)
test=month.day.year(wod.chl.df$wod.time, c(1,1,1770))
wod.chl.df$month=test$month
wod.chl.df$day=test$day
wod.chl.df$year=test$year
wod.chl.df2=wod.chl.df[which(wod.chl.df$year>1996),]
colnames(wod.chl.df2)=c('chl', 'lon', 'lat', 'z', 'jday', 'month', 'day', 'year')
wod.chl.df2$F1=paste(wod.chl.df2$year, wod.chl.df2$month, wod.chl.df2$day, sep='-')
wod.chl.df2$DOY=as.numeric(strftime(wod.chl.df2$F1, '%j'))
wod.chl.df2=wod.chl.df2[complete.cases(wod.chl.df2),]
barplot(table(round(wod.chl.df2$chl, digits=1)))
barplot(table(wod.chl.df2$month))
barplot(table(wod.chl.df2$year))
# coordinates(wod.chl.df2)=~lon+lat #transform to Spatialpointsdataframe
# proj4string(wod.chl.df2)=CRS("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0") #ensure same projection
# pointsin=over(wod.chl.df2, NES.shp) #find which boxes samples belong to
map("worldHires", xlim=c(-77,-65),ylim=c(35,45), fill=T,border=0,col="gray70")
map.axes(las=1)
points(wod.chl.df2)
points(wod.chl.df2$lon, wod.chl.df2$lat)
### build initial list of time matchups - indicates the dimension of the chl raster stack to extract data from
# yy=unique(wod.chl.df2$year) # unique years
wod.chl.df2$smatch=NA
# wod.chl.df2$DOYmed=NA
wod.chl.df2$sDOY1=NA
wod.chl.df2$sDOY2=NA
for(i in 1:length(wod.chl.df2$lon)){
ylim=which(dates.8d$X1==wod.chl.df2$year[i])
xmn=which(dates.8d$DOY1[ylim]<=wod.chl.df2$DOY[i])#[dates.8d$Y1==yj]
xmx=which(dates.8d$DOY2[ylim]>=wod.chl.df2$DOY[i])#[dates.8d$Y1==yj]
both=ylim[which(xmn%in%xmx)]
if(length(both)<1){
next
}
else {
wod.chl.df2$smatch[i]=both
wod.chl.df2$sDOY1[i]=dates.8d$DOY1[both]
wod.chl.df2$sDOY2[i]=dates.8d$DOY2[both]
}
}
wod.chl.df2$DOYmed=round((wod.chl.df2$sDOY1+wod.chl.df2$sDOY2)/2, digits=0) # median satellite DOY
wod.chl.df2$ddif=wod.chl.df2$DOY-wod.chl.df2$DOYmed # difference from median satellite date
wod.chl.df2=wod.chl.df2[complete.cases(wod.chl.df2$smatch),]
WOD=wod.chl.df2
wod.chl.df2$gsm=NA
wod.chl.df2$oc5=NA
wod.chl.df2$av=NA
wod.chl.df2$occi=NA
coordinates(wod.chl.df2)=~lon+lat #transform to Spatialpointsdataframe
for(i in 1:length(wod.chl.df2$chl)){
# wod.chl.df2$gsm[i]=extract(chl.gsm.8d[[wod.chl.df2$smatch[i]]], wod.chl.df2[i,], method='bilinear', fun='mean', na.rm=T)
# wod.chl.df2$av[i]=extract(chl.av.8d[[wod.chl.df2$smatch[i]]], wod.chl.df2[i,], method='bilinear', fun='mean', na.rm=T)
# wod.chl.df2$oc5[i]=extract(chl.oc5.8d[[wod.chl.df2$smatch[i]]], wod.chl.df2[i,], method='bilinear', fun='mean', na.rm=T)
wod.chl.df2$occi[i]=extract(occi[[wod.chl.df2$smatch[i]]], wod.chl.df2[i,], method='bilinear', fun='mean', na.rm=T)
if (i%%100==0){
print(paste(i, ' of ', length(wod.chl.df2$chl), sep=''))
}
}
## add time to dataframe for satellite matchup
wod.chl.df2$jtime=wod.chl.df2$jday-floor(wod.chl.df2$jday)
wod.chl.df2$time=format(times(wod.chl.df2$jtime))
write.csv(wod.chl.df2, file='WOD_surf_occiv4_2.csv')
WOD$gsm=wod.chl.df2$gsm
WOD$av=wod.chl.df2$av
WOD$oc5=wod.chl.df2$oc5
WOD=WOD[complete.cases(WOD$gsm),]
WOD=WOD[complete.cases(WOD$chl),]
colorpal=viridis::viridis(8)
# Non log transformed data
plot(WOD$chl~WOD$oc5, type='n')#, color=colorpal[WOD$ddif+4])
points(WOD$oc5, WOD$chl, type='p', col=colorpal[WOD$ddif+4])
abline(0,1)
reg1=lm(WOD$chl~WOD$oc5)
WOD$gsm=wod.chl.df2$gsm
rm(WOD)
WOD$gsm=wod.chl.df2$gsm
WOD=wod.chl.df2
WOD$gsm=wod.chl.df2$gsm
WOD$av=wod.chl.df2$av
WOD$oc5=wod.chl.df2$oc5
WOD=WOD[complete.cases(WOD$gsm),]
WOD=WOD[complete.cases(WOD$chl),]
# Non log transformed data
plot(WOD$chl~WOD$oc5, type='n')#, color=colorpal[WOD$ddif+4])
View(WOD)
WOD=wod.chl.df2
WOD=wod.chl.df2
WOD$gsm=wod.chl.df2$gsm
WOD$av=wod.chl.df2$av
WOD$oc5=wod.chl.df2$oc5
WOD=WOD[complete.cases(WOD$gsm),]
WOD=wod.chl.df2
WOD$gsm=wod.chl.df2$gsm
WOD$av=wod.chl.df2$av
WOD$oc5=wod.chl.df2$oc5
sum(is.na(WOD$gsm))
WOD$occi=wod.chl.df2$occi
for(i in 1:length(wod.chl.df2$chl)){
wod.chl.df2$gsm[i]=extract(chl.gsm.8d[[wod.chl.df2$smatch[i]]], wod.chl.df2[i,], method='bilinear', fun='mean', na.rm=T)
wod.chl.df2$av[i]=extract(chl.av.8d[[wod.chl.df2$smatch[i]]], wod.chl.df2[i,], method='bilinear', fun='mean', na.rm=T)
wod.chl.df2$oc5[i]=extract(chl.oc5.8d[[wod.chl.df2$smatch[i]]], wod.chl.df2[i,], method='bilinear', fun='mean', na.rm=T)
# wod.chl.df2$occi[i]=extract(occi[[wod.chl.df2$smatch[i]]], wod.chl.df2[i,], method='bilinear', fun='mean', na.rm=T)
if (i%%100==0){
print(paste(i, ' of ', length(wod.chl.df2$chl), sep=''))
}
}
WOD$gsm=wod.chl.df2$gsm
WOD$av=wod.chl.df2$av
WOD$oc5=wod.chl.df2$oc5
WOD$occi=wod.chl.df2$occi
WOD=WOD[complete.cases(WOD$gsm),]
WOD=WOD[complete.cases(WOD$chl),]
# Non log transformed data
plot(WOD$chl~WOD$oc5, type='n')#, color=colorpal[WOD$ddif+4])
points(WOD$oc5, WOD$chl, type='p', col=colorpal[WOD$ddif+4])
abline(0,1)
reg1=lm(WOD$chl~WOD$oc5)
summary(reg1)
abline(reg1$coefficients[1], reg1$coefficients[2], col='red')
## log transform both X and Y
x=log10(WOD$gsm+0.001)
y=log10(WOD$chl+0.001)
reg1=lm(y~x)
summary(reg1)
xy=data.frame(x,y)
xy=xy[complete.cases(x),]
plot(y~x, type='n')#, log='xy')#, color=colorpal[WOD$ddif+4])
points(log10(WOD$gsm), log10(WOD$chl), type='p', col=colorpal[WOD$ddif+4])
abline(0,1)
abline(reg1$coefficients[1], reg1$coefficients[2], col='red')
library(plotrix)
taylor.diagram(wod.chl.df2$chl, wod.chl.df2$oc5, col='red', main='WOD in situ chl vs 8-d combined')
taylor.diagram(wod.chl.df2$chl, wod.chl.df2$gsm, add=T, col='blue')
taylor.diagram(wod.chl.df2$chl, wod.chl.df2$av, add=T, col='green')
taylor.diagram(wod.chl.df2$chl, wod.chl.df2$occi, add=T, col='black')
#extract just lat/lons for lines
gbk.lonlat =as.data.frame(lapply(slot(gbk, "polygons"), function(x) lapply(slot(x, "Polygons"), function(y) slot(y, "coords"))))
gom.lonlat =as.data.frame(lapply(slot(gom, "polygons"), function(x) lapply(slot(x, "Polygons"), function(y) slot(y, "coords"))))
mab.lonlat =as.data.frame(lapply(slot(mab, "polygons"), function(x) lapply(slot(x, "Polygons"), function(y) slot(y, "coords"))))
scs.lonlat =as.data.frame(lapply(slot(scs, "polygons"), function(x) lapply(slot(x, "Polygons"), function(y) slot(y, "coords"))))
# nes.lonlat =as.data.frame(lapply(slots(), function))
gom.mat=as.matrix(gom.lonlat)
gbk.mat=as.matrix(gbk.lonlat)
mab.mat=as.matrix(mab.lonlat)
scs.mat=as.matrix(scs.lonlat)
m4=as.matrix(wod.chl.df2@coords)
wod.chl.df2$epu=NA
wod.chl.df2$epu[which(in.out(gbk.mat, m4))]='GBK'
wod.chl.df2$epu[which(in.out(gom.mat, m4))]='GOM'
wod.chl.df2$epu[which(in.out(scs.mat, m4))]='SCS'
wod.chl.df2$epu[which(in.out(mab.mat, m4))]='MAB'
#subset to region
limitc='GOM' #GBK SCS MAB
test=wod.chl.df2[which(wod.chl.df2$epu==limitc),]
taylor.diagram(test$chl, test$oc5, col='red', main=paste(limitc, ' only;',' n=',length(test), sep=''))
taylor.diagram(test$chl, test$gsm, add=T, col='blue')
taylor.diagram(test$chl, test$av, add=T, col='green')
taylor.diagram(test$chl, test$occi, add=T, col='black')
barplot(table(test$month), main=limitc)
barplot(table(test$year), main=limitc)
map("worldHires", xlim=c(-77,-65),ylim=c(35,45), fill=T,border=0,col="gray70")
map.axes(las=1)
points(test@coords, pch=19)
#subset to region
limitc='GBK' #GBK SCS MAB
test=wod.chl.df2[which(wod.chl.df2$epu==limitc),]
taylor.diagram(test$chl, test$oc5, col='red', main=paste(limitc, ' only;',' n=',length(test), sep=''))
taylor.diagram(test$chl, test$gsm, add=T, col='blue')
taylor.diagram(test$chl, test$av, add=T, col='green')
taylor.diagram(test$chl, test$occi, add=T, col='black')
barplot(table(test$month), main=limitc)
barplot(table(test$year), main=limitc)
map("worldHires", xlim=c(-77,-65),ylim=c(35,45), fill=T,border=0,col="gray70")
map.axes(las=1)
points(test@coords, pch=19)
#subset to region
limitc='MAB' #GBK SCS MAB
test=wod.chl.df2[which(wod.chl.df2$epu==limitc),]
taylor.diagram(test$chl, test$oc5, col='red', main=paste(limitc, ' only;',' n=',length(test), sep=''))
taylor.diagram(test$chl, test$gsm, add=T, col='blue')
taylor.diagram(test$chl, test$av, add=T, col='green')
taylor.diagram(test$chl, test$occi, add=T, col='black')
barplot(table(test$month), main=limitc)
barplot(table(test$year), main=limitc)
map("worldHires", xlim=c(-77,-65),ylim=c(35,45), fill=T,border=0,col="gray70")
map.axes(las=1)
points(test@coords, pch=19)
?taylor.diagram
taylor.diagram(test$chl, test$oc5, col='red', main=paste(limitc, ' only;',' n=',length(test), sep=''), pos.cor = F)
taylor.diagram(test$chl, test$gsm, add=T, col='blue')
taylor.diagram(test$chl, test$av, add=T, col='green')
taylor.diagram(test$chl, test$occi, add=T, col='black')
taylor.diagram(test$chl, test$oc5, col='red', main=paste(limitc, ' only;',' n=',length(test), sep=''), pos.cor = F)
taylor.diagram(test$chl, test$gsm, add=T, col='blue',pos.cor = F)
taylor.diagram(test$chl, test$av, add=T, col='green',pos.cor = F)
taylor.diagram(test$chl, test$occi, add=T, col='black',pos.cor = F)
#subset to region
limitc='GBK' #GBK SCS MAB
test=wod.chl.df2[which(wod.chl.df2$epu==limitc),]
taylor.diagram(test$chl, test$oc5, col='red', main=paste(limitc, ' only;',' n=',length(test), sep=''), pos.cor = F)
taylor.diagram(test$chl, test$gsm, add=T, col='blue',pos.cor = F)
taylor.diagram(test$chl, test$av, add=T, col='green',pos.cor = F)
taylor.diagram(test$chl, test$occi, add=T, col='black',pos.cor = F)
#subset to region
limitc='GOM' #GBK SCS MAB
test=wod.chl.df2[which(wod.chl.df2$epu==limitc),]
taylor.diagram(test$chl, test$oc5, col='red', main=paste(limitc, ' only;',' n=',length(test), sep=''), pos.cor = F)
taylor.diagram(test$chl, test$gsm, add=T, col='blue',pos.cor = F)
taylor.diagram(test$chl, test$av, add=T, col='green',pos.cor = F)
taylor.diagram(test$chl, test$occi, add=T, col='black',pos.cor = F)
test=wod.chl.df2[is.na(wod.chl.df2$epu),]
taylor.diagram(test$chl, test$oc5, col='red', main=paste(limitc, ' only;',' n=',length(test), sep=''),pos.cor = F)
taylor.diagram(test$chl, test$gsm, add=T, col='blue')
taylor.diagram(test$chl, test$av, add=T, col='green')
taylor.diagram(test$chl, test$occi, add=T, col='black')
test=wod.chl.df2[which(wod.chl.df2$epu=='GOM' | wod.chl.df2$epu=='GBK' | wod.chl.df2$epu=='MAB'),]
limitc='EPU' #GBK SCS MAB
taylor.diagram(test$chl, test$oc5, col='red', main=paste(limitc, ' only;',' n=',length(test), sep=''), pos.cor = F)
taylor.diagram(test$chl, test$gsm, add=T, col='blue',pos.cor = F)
taylor.diagram(test$chl, test$av, add=T, col='green',pos.cor = F)
taylor.diagram(test$chl, test$occi, add=T, col='black',pos.cor = F)
wod.chl.df=data.frame(wod.chl[which(wod.z<15)], wod.lon, wod.lat, wod.z[which(wod.z<15)], wod.time) #less than 15 m
wod.chl.df=data.frame(wod.chl[which(wod.z==10)], wod.lon, wod.lat, wod.z[which(wod.z==10)], wod.time) #less than 15 m
wod.chl.df=data.frame(wod.chl[which(wod.z==5)], wod.lon, wod.lat, wod.z[which(wod.z==5)], wod.time) #less than 15 m
wod.chl.df=data.frame(wod.chl[which(wod.z==5)], wod.lon[which(wod.z==5)], wod.lat[which(wod.z==5)], wod.z[which(wod.z==5)], wod.time[which(wod.z==5)]) #less than 15 m
wod.chl.df=data.frame(wod.chl[which(wod.z<15)], wod.lon[which(wod.z<15)], wod.lat[which(wod.z<15)], wod.z[which(wod.z<15)], wod.time[which(wod.z<15)]) #less than 15 m
View(wod.chl.df)
## WOD CTD samples, surface depth
wod.chl.df=data.frame(wod.chl[which(wod.z==0)], wod.lon, wod.lat, wod.z[which(wod.z==0)], wod.time) #surface bin
wod.chl.df=data.frame(wod.chl[which(wod.z==15)], wod.lon[which(wod.z==15)], wod.lat[which(wod.z==15)], wod.z[which(wod.z==15)], wod.time[which(wod.z==15)]) #less than 15 m
View(wod.chl.df)
limitc='NA' #GBK SCS MAB
limitc='NA' #GBK SCS MAB
test=wod.chl.df2[is.na(wod.chl.df2$epu),]
taylor.diagram(test$chl, test$oc5, col='red', main=paste(limitc, ' only;',' n=',length(test), sep=''),pos.cor = F)
taylor.diagram(test$chl, test$gsm, add=T, col='blue')
taylor.diagram(test$chl, test$av, add=T, col='green')
taylor.diagram(test$chl, test$occi, add=T, col='black')
save.image("~/GitHub/JPSS/calibration/WOD/ws.RData")
#testing
plotChlRaster(chl.av.8d, 5, 7, limit=T, av.dates.8d)
#testing
plotChlRaster(occi, 5, 7, limit=T, av.dates.8d)
#testing
plotChlRaster(chl.gsm.8d, 5, 7, limit=T, av.dates.8d)
dim(occi)
8d.occi.nes=extract_calc(occi[[1:1028]], NES.shp)
w.occi.nes=extract_calc(occi[[1:1028]], NES.shp)
View(extract_calc)
plot(w.occi.nes)
View(w.occi.nes)
barplot(w.occi.nes)
plot(w.occi.nes, type='l')
plot(w.occi.nes~occi.date$F1, type='l')
plot(w.occi.nes[1,]~occi.date$F1, type='l')
plot(w.occi.nes[1,], type='l')
plot(w.occi.nes[1,]~occi.date$year, type='l')
occi.date$F1[1]
doy(occi.date$F1[1])
as.date(occi.date$F1[1])
library(lubridate)
as.date(occi.date$F1[1])
doy(occi.date$F1[1])
day(occi.date$F1[1])
yday(occi.date$F1[1])
as.Date((occi.date$F1[1]))
occi.date$NESchl=w.occi.nes[1,]
w.occi.gom=extract_calc(occi[[1:1028]], gom)
occi.date$GOMchl=w.occi.gom[1,]
w.occi.gbk=extract_calc(occi[[1:1028]], gbk)
occi.date$GBKchl=w.occi.gbk[1,]
save(occi.date, file='occi_date_extracted_chl.RData')
library(dplyr)
tt.sp=select(occi.date, month>6, year, NESchl) %>% group_by(year, month) %>% summarise(mean=mean(NESchl))
tt.sp=select(occi.date, month[month>6], year, NESchl) %>% group_by(year, month) %>% summarise(mean=mean(NESchl))
tt.sp=select(occi.date, month, year, NESchl) %>% filter(month>6) %>% group_by(year, month) %>% summarise(mean=mean(NESchl))
tt.sp=select(occi.date, month, year, NESchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(NESchl))
View(tt.sp)
plot(tt)
plot(tt.sp)
plot(tt.sp, type='b')
tt.fl=select(occi.date, month, year, NESchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt.fl, type='b')
tt.sp=select(occi.date, month, year, NESchl) %>% filter(month<6) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt.sp, type='b')
tt.fl=select(occi.date, month, year, NESchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt.fl, type='b')
tt=select(occi.date, month, year, NESchl) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt, type='b')
selcol="NESchl"
tt.sp=select(occi.date, month, year, selcol) %>% filter(month<6) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt.sp, type='b')
tt=select(occi.date, month, year, NESchl) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt, type='b', main=paste(selcol, " annual Chl"))
tt.sp=select(occi.date, month, year, selcol) %>% filter(month=<6) %>% group_by(year) %>% summarise(mean=mean(NESchl))
tt.sp=select(occi.date, month, year, selcol) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt.sp, type='b',main=paste(selcol, " Jan-Jun Chl"))
selcol="GOMchl"
tt=select(occi.date, month, year, NESchl) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt, type='b', main=paste(selcol, " annual Chl"))
tt.sp=select(occi.date, month, year, selcol) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt.sp, type='b',main=paste(selcol, " Jan-Jun Chl"))
tt.fl=select(occi.date, month, year, NESchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt.fl, type='b', main=paste(selcol, " Jul-Dec Chl"))
selcol="GBKchl"
tt=select(occi.date, month, year, NESchl) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt, type='b', main=paste(selcol, " annual Chl"))
tt.sp=select(occi.date, month, year, selcol) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(NESchl))
selcol="GBKchl"
tt=select(occi.date, month, year, selcol) %>% group_by(year) %>% summarise(mean=mean(selcol))
plot(tt, type='b', main=paste(selcol, " annual Chl"))
selcol
selcol=`GBKchl`
tt=select(occi.date, month, year, GBKchl) %>% group_by(year) %>% summarise(mean=mean(GBKchl))
plot(tt, type='b', main=paste(GBKchl, " annual Chl"))
tt.sp=select(occi.date, month, year, GBKchl) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(GBKchl))
plot(tt, type='b', main=paste("GBK annual Chl"))
tt.sp=select(occi.date, month, year, GBKchl) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(GBKchl))
plot(tt.sp, type='b',main=paste("GBKchl Jan-Jun Chl"))
tt.fl=select(occi.date, month, year, GBKchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(GBKchl))
plot(tt.fl, type='b', main=paste("GBKchl Jul-Dec Chl"))
tt=select(occi.date, month, year, GOMchl) %>% group_by(year) %>% summarise(mean=mean(GOMchl))
plot(tt, type='b', main=paste("GOM annual Chl"))
tt.sp=select(occi.date, month, year, GOMchl) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(GOMchl))
plot(tt.sp, type='b',main=paste("GOM Jan-Jun Chl"))
tt.fl=select(occi.date, month, year, GOMchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(GOMchl))
plot(tt.fl, type='b', main=paste("GOM Jul-Dec Chl"))
tt=select(occi.date, month, year, MABchl) %>% group_by(year) %>% summarise(mean=mean(MABchl))
plot(tt, type='b', main=paste("MAB annual Chl"))
tt.sp=select(occi.date, month, year, MABchl) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(MABchl))
plot(tt.sp, type='b',main=paste("MAB Jan-Jun Chl"))
tt.fl=select(occi.date, month, year, MABchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(MABchl))
plot(tt.fl, type='b', main=paste("MAB Jul-Dec Chl"))
w.occi.gbk=extract_calc(occi[[1:1028]], mab)
occi.date$MABchl=w.occi.mab[1,]
tt=select(occi.date, month, year, MABchl) %>% group_by(year) %>% summarise(mean=mean(MABchl))
occi.date$MABchl=w.occi.gbk[1,]
tt=select(occi.date, month, year, MABchl) %>% group_by(year) %>% summarise(mean=mean(MABchl))
plot(tt, type='b', main=paste("MAB annual Chl"))
tt.sp=select(occi.date, month, year, MABchl) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(MABchl))
plot(tt.sp, type='b',main=paste("MAB Jan-Jun Chl"))
tt.fl=select(occi.date, month, year, MABchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(MABchl))
plot(tt.fl, type='b', main=paste("MAB Jul-Dec Chl"))
min(occi.date$MABchl)
min(occi.date$MABchl, na.rm=T)
occi.date$year[which(min(occi.date$MABchl, na.rm=T))]
occi.date$year[which(occi.date$MABchl==min(occi.date$MABchl, na.rm=T)))]
occi.date$year[which(occi.date$MABchl==min(occi.date$MABchl, na.rm=T))]
occi.date$year[which(occi.date$NESchl==min(occi.date$NESchl, na.rm=T))]
plot(occi.date$MABchl)
plot(occi.date$MABchl, type='l')
plot(occi.date$GOMchl, type='l')
plot(occi.date$GBKchl, type='l')
tt=select(occi.date, month, year, NESchl) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt, type='b', main=paste("NES annual Chl"))
tt.sp=select(occi.date, month, year, NESchl) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt.sp, type='b',main=paste("NES Jan-Jun Chl"))
tt.fl=select(occi.date, month, year, NESchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt.fl, type='b', main=paste("NES Jul-Dec Chl"))
tt=select(occi.date, month, year, GBKchl) %>% group_by(year) %>% summarise(mean=mean(GBKchl))
plot(tt, type='b', main=paste("GBK annual Chl"))
tt.sp=select(occi.date, month, year, GBKchl) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(GBKchl))
plot(tt.sp, type='b',main=paste("GBK Jan-Jun Chl"))
tt.fl=select(occi.date, month, year, GBKchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(GBKchl))
plot(tt.fl, type='b', main=paste("GBKchl Jul-Dec Chl"))
tt=select(occi.date, month, year, GOMchl) %>% group_by(year) %>% summarise(mean=mean(GOMchl))
plot(tt, type='b', main=paste("GOM annual Chl"))
tt.sp=select(occi.date, month, year, GOMchl) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(GOMchl))
plot(tt.sp, type='b',main=paste("GOM Jan-Jun Chl"))
tt.fl=select(occi.date, month, year, GOMchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(GOMchl))
plot(tt.fl, type='b', main=paste("GOM Jul-Dec Chl"))
tt=select(occi.date, month, year, MABchl) %>% group_by(year) %>% summarise(mean=mean(MABchl))
plot(tt, type='b', main=paste("MAB annual Chl"))
tt.sp=select(occi.date, month, year, MABchl) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(MABchl))
plot(tt.sp, type='b',main=paste("MAB Jan-Jun Chl"))
tt.fl=select(occi.date, month, year, MABchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(MABchl))
plot(tt.fl, type='b', main=paste("MAB Jul-Dec Chl"))
tt=select(occi.date, month, year, NESchl) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt, type='b', main=paste("NES annual Chl"))
w.occi.nes.rmsd=extract_calc(occi.rmsd[[1:1028]], NES.shp)
occi.date$NESchlrmsd=w.occi.nes.rmsd[1,]
w.occi.gom.rmsd=extract_calc(occi.rmsd[[1:1028]], gom)
occi.date$GOMchl=w.occi.gom[1,]
occi.date$GOMchl=w.occi.gom.rmsd[1,]
occi.date$GOMchl=w.occi.gom[1,]
occi.date$GOMchlrmsd=w.occi.gom.rmsd[1,]
w.occi.gbk.rmsd=extract_calc(occi.rmsd[[1:1028]], gbk)
occi.date$GBKchl=w.occi.gbk[1,]
w.occi.mab=extract_calc(occi[[1:1028]], mab)
occi.date$GBKchlrmsd=w.occi.gbk.rmsd[1,]
w.occi.mab.rmsd=extract_calc(occi.rmsd[[1:1028]], mab)
occi.date$MABchlrmsd=w.occi.mab.rmsd[1,]
tt=select(occi.date, month, year, NESchlrmsd) %>% group_by(year) %>% summarise(mean=mean(NESchlrmsd))
plot(tt, type='b', main=paste("NES annual Chl"))
nc1=nc_open('C:/Users/ryan.morse/Documents/GitHub/JPSS/CCI_ALL-v4.2-8DAY.nc')
lg.chl.occi=log10(chl.occi+1)
## Log Chl_loop over and stack
bb=c(-80, -60, 32, 48)
m2=t(lg.chl.occi[,,1])
# m2=t(m)#[ncol(m):1,] # flip and transpose matrix
lg.occi=raster(m2)
extent(lg.occi)=bb
crs(lg.occi)="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
for(i in 2:dim(lg.chl.occi)[3]){
m2=t(lg.chl.occi[,,i])
# m2=t(m)#[ncol(m):1,] # flip and transpose matrix
xx=raster(m2)
extent(xx)=bb
crs(xx)="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
# plot(xx)
lg.occi=stack(lg.occi, xx)
print(i)
}
lg.chl.occi=log10(chl.occi)
m2=t(lg.chl.occi[,,1])
# m2=t(m)#[ncol(m):1,] # flip and transpose matrix
lg.occi=raster(m2)
extent(lg.occi)=bb
crs(lg.occi)="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
for(i in 2:dim(lg.chl.occi)[3]){
m2=t(lg.chl.occi[,,i])
# m2=t(m)#[ncol(m):1,] # flip and transpose matrix
xx=raster(m2)
extent(xx)=bb
crs(xx)="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
# plot(xx)
lg.occi=stack(lg.occi, xx)
print(i)
}
w.occi.nes.lg=extract_calc(occi.lg[[1:1028]], NES.shp)
w.occi.nes.lg=extract_calc(lg.occi[[1:1028]], NES.shp)
occi.date$NESchllg=w.occi.nes.lg[1,]
tt=select(occi.date, month, year, NESchllg) %>% group_by(year) %>% summarise(mean=mean(NESchlrmsd)) %>% mutuate(mean=10^mean)
tt=select(occi.date, month, year, NESchllg) %>% group_by(year) %>% summarise(mean=mean(NESchllg)) %>% mutuate(mean=10^mean)
tt=select(occi.date, month, year, NESchllg) %>% group_by(year) %>% summarise(mean=mean(NESchllg)) %>% mutate(mean=10^mean)
plot(tt, type='b', main=paste("NES annual Chl"))
tt=select(occi.date, month, year, NESchl) %>% group_by(year) %>% summarise(mean=mean(NESchl))
plot(tt, type='b', main=paste("NES annual Chl"))
## now using log chl data, then taking exponent to standardize
tt2=select(occi.date, month, year, NESchllg) %>% group_by(year) %>% summarise(mean=mean(NESchllg)) %>% mutate(mean=10^mean)
lines(tt2, add=T)
lines(tt2)
plot(tt, type='b', main=paste("NES annual Chl"), ylim=c(0.25, 1))
plot(tt, type='b', main=paste("NES annual Chl"), ylim=c(0.5, 1.1))
lines(tt2)
## now using log chl data, then taking exponent to standardize
tt2=select(occi.date, month, year, NESchllg) %>% group_by(year) %>% summarise(mean=mean(NESchllg)) %>% mutate(data=10^mean)
rm(tt2)
## now using log chl data, then taking exponent to standardize
tt2=select(occi.date, month, year, NESchllg) %>% group_by(year) %>% summarise(mean=mean(NESchllg)) %>% mutate(data=10^mean)
plot(tt, type='b', main=paste("NES annual Chl"), ylim=c(0.7, 1.1))
plot(tt, type='b', main=paste("NES annual Chl"), ylim=c(0.8, 1.1))
lines(tt2)
plot(tt, type='b', main=paste("NES annual Chl"), ylim=c(0.7, 1.1))
lines(tt2)
## now using log chl data, then taking exponent to standardize
tt2=select(occi.date, month, year, NESchllg) %>% group_by(year) %>% summarise(mean=mean(NESchllg)) %>% mutate(mean=10^mean)
lines(tt2)
abline(v=2012)
save.image("~/GitHub/JPSS/calibration/WOD/ws.RData")
