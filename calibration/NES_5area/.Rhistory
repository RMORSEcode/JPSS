plot(t2$value~t$Time, t='b', main='GOM Cf')
abline(h=0)
t=mtest[which(mtest$Region=='MAB' & mtest$variable=='Cty'),]
plot(t$value~t$Time, t='b', main='MAB Cty')
abline(h=0)
unique(mtest$variable)
unique(mtest$variable)[1]
i=unique(mtest$variable)[1]
i=unique(mtest$variable, stringsAsFactors=F)[1]
i
test=lapply(mtest, as.character)
test=data.frame(lapply(mtest, as.character), stringsAsFactors=FALSE)
region=unique(test$Region) #'GOM'
test$value=as.numeric(test$value)
for (i in (unique(test$variable))){
plot(t$value~t$Time, t='b', main=paste(i,region)
abline(h=0)
}
spp=unique(test$variable)
for (i in spp){
plot(t$value~t$Time, t='b', main=paste(i,region)
abline(h=0)
}
j=3
for (i in spp){
plot(t$value~t$Time, t='b', main=paste(i,region[j])
abline(h=0)
}
for (i in (spp)){
plot(t$value~t$Time, t='b', main=paste(i,region[j])
abline(h=0)
}
t=test[which(test$Region=='MAB' & test$variable==i),]
plot(t$value~t$Time, t='b', main=paste(i,region[j])
abline(h=0)
}
plot(t$value~t$Time, t='b', main=paste(i,region[j]))
plot(t$value~t$Time, t='b', main=paste(i,region[j]), ylim=c(-1,1))
abline(h=0)
for (i in (spp)){
t=test[which(test$Region=='MAB' & test$variable==i),]
plot(t$value~t$Time, t='b', main=paste(i,region[j]), ylim=c(-1,1))
abline(h=0)
}
for (i in (spp)){
for (j in (region)){
t=test[which(test$Region=='MAB' & test$variable==i),]
plot(t$value~t$Time, t='b', main=paste(i,j), ylim=c(-1.5,1.5))
abline(h=0)
}
}
region=unique(test$Region) #'GOM'
# j=3
spp=unique(test$variable)
for (i in (spp)){
t=test[which(test$Region=='MAB' & test$variable==i),]
for (j in (region)){
plot(t$value~t$Time, t='b', main=paste(i,j), ylim=c(-1.5,1.5))
abline(h=0)
}
}
for (i in (spp)){
# t=test[which(test$Region=='MAB' & test$variable==i),]
for (j in (region)){
t=test[which(test$Region==j & test$variable==i),]
plot(t$value~t$Time, t='b', main=paste(i,j), ylim=c(-1.5,1.5))
abline(h=0)
}
}
for (j in (region)){
# t=test[which(test$Region=='MAB' & test$variable==i),]
for (i in (spp)){
t=test[which(test$Region==j & test$variable==i),]
plot(t$value~t$Time, t='b', main=paste(i,j), ylim=c(-1.5,1.5))
abline(h=0)
}
}
pdf(file='SOE2020.pdf')
for (j in (region)){
# t=test[which(test$Region=='MAB' & test$variable==i),]
for (i in (spp)){
t=test[which(test$Region==j & test$variable==i),]
plot(t$value~t$Time, t='b', main=paste(i,j), ylim=c(-1.5,1.5))
abline(h=0)
}
}
dev.off()
getwd()
load("C:/Users/ryan.morse/Desktop/Iomega Drive Backup 20171012/1 RM/JHare data/EDAB/areawt/20pct/Fall 2019/SLI_Small-Large_copepod_anomaly.rdata")
View(test)
load("C:/Users/ryan.morse/Desktop/Iomega Drive Backup 20171012/1 RM/JHare data/EDAB/areawt/20pct/Fall 2019/ws.RData")
library(vegan)
library(stats)
library(mgcv)
# library(labdsv)
# library(rioja)
# library(strucchange)
library(reshape2)
# library(dendextend)
# library(colorspace)
# library(RColorBrewer)
# library(gplots)
# library(tframe)
# library(pracma)
library(readxl)
# library(plotrix)
library(lubridate)
library(sp)
library(maptools)
library(marmap)
library(rgeos)
plot(gbk.yr.anom$calfin_100m3~rownames(gbk.yr.anom), type='b', pch=19, ylim=c(-1,1), ylab='', xlab='', col='red');abline(h=0, lty=3)
plot(gbk.yr.anom$hyper_100m3~rownames(gbk.yr.anom), type='b', pch=19, ylim=c(-1,1), ylab='', xlab='', col='red');abline(h=0, lty=3)
plot(gom.yr.anom$hyper_100m3~rownames(gom.yr.anom), type='b', pch=19, ylim=c(-1,1), ylab='', xlab='', col='red');abline(h=0, lty=3)
plot(gom.yr.anom$euph1_100m3~rownames(gom.yr.anom), type='b', pch=19, ylim=c(-1,1), ylab='', xlab='', col='red');abline(h=0, lty=3)
plot(gbk.yr.anom$euph1_100m3~rownames(gom.yr.anom), type='b', pch=19, ylim=c(-1,1), ylab='', xlab='', col='red');abline(h=0, lty=3)
plot(gom.yr.anom$euph1_100m3~rownames(gom.yr.anom), type='b', pch=19, ylim=c(-2,2), ylab='', xlab='', col='red');abline(h=0, lty=3)
View(gom.yr.spln)
plot(gom.yr.spln[26,], type='l')
plot(gom.yr.spln[,26], type='l')
load("C:/Users/ryan.morse/Desktop/Iomega Drive Backup 20171012/1 RM/JHare data/EDAB/areawt/20pct/Fall 2019/ws.RData")
library(vegan)
library(stats)
library(mgcv)
# library(labdsv)
# library(rioja)
# library(strucchange)
library(reshape2)
# library(dendextend)
# library(colorspace)
# library(RColorBrewer)
# library(gplots)
# library(tframe)
# library(pracma)
library(readxl)
# library(plotrix)
library(lubridate)
library(sp)
library(maptools)
library(marmap)
library(rgeos)
plot(gom.yr.spln[,26], type='l')
plot(gom.yr.anom$euph1_100m3~rownames(gom.yr.anom), type='b', pch=19, ylim=c(-2,2), ylab='', xlab='', col='red');abline(h=0, lty=3)
plot(gom.yr.anom$euph1_100m3~rownames(gom.yr.anom), type='b', pch=19, ylim=c(-1.5,1.5), ylab='', xlab='', col='red');abline(h=0, lty=3)
plot(gom.yr.anom$hyper_100m3~rownames(gom.yr.anom), type='b', pch=19, ylim=c(-1.5,1.5), ylab='', xlab='', col='red');abline(h=0, lty=3)
load("C:/Users/ryan.morse/Downloads/SurvdatBio (3).RData")
unique(survdat.bio$SVSPP)
head(survdat.bio,20)
load("C:/Users/ryan.morse/Downloads/SurvdatBio (3).RData")
load("C:/Users/ryan.morse/Desktop/Iomega Drive Backup 20171012/1 RM/JHare data/EDAB/areawt/20pct/Fall 2019/SLI_Small-Large_copepod_anomaly.rdata")
View(test)
load("C:/Users/ryan.morse/Desktop/Iomega Drive Backup 20171012/1 RM/JHare data/EDAB/areawt/20pct/Fall 2019/Copepod_yearly_abundance_anomalies_by_EPU.rdata")
View(mtest)
plot(mtest$value[which(mtest$Region=='MAB' & mtest$variable=="Cha")]~mtest$Time[which(mtest$Region=='MAB')])
plot(mtest$value[which(mtest$Region=='MAB' & mtest$variable=="Cha")]~mtest$Time[which(mtest$Region=='MAB'& mtest$variable=="Cha")])
plot(mtest$value[which(mtest$Region=='MAB' & mtest$variable=="Cha")]~mtest$Time[which(mtest$Region=='MAB'& mtest$variable=="Cha")], type='b')
abline(h=0)
plot(mtest$value[which(mtest$Region=='MAB' & mtest$variable=="Cty")]~mtest$Time[which(mtest$Region=='MAB'& mtest$variable=="Cha")], type='b');abline(h=0)
plot(mtest$value[which(mtest$Region=='MAB' & mtest$variable=="Pse")]~mtest$Time[which(mtest$Region=='MAB'& mtest$variable=="Cha")], type='b');abline(h=0)
plot(mtest$value[which(mtest$Region=='MAB' & mtest$variable=="Tlo")]~mtest$Time[which(mtest$Region=='MAB'& mtest$variable=="Cha")], type='b');abline(h=0)
plot(mtest$value[which(mtest$Region=='MAB' & mtest$variable=="Tlo")]~
mtest$Time[which(mtest$Region=='MAB'& mtest$variable=="Cha")], type='b',
ylim=c(-1,1));abline(h=0)
spp=unique(mtest$variable)
i[1]
for (i in (spp)){
plot(mtest$value[which(mtest$Region=='MAB' & mtest$variable==i)]~
mtest$Time[which(mtest$Region=='MAB'& mtest$variable=="Cha")], type='b',
ylim=c(-1,1), main=i);abline(h=0)
}
for (i in (spp)){
for (i in (spp)){
plot(mtest$value[which(mtest$Region=='GOM' & mtest$variable==i)]~
mtest$Time[which(mtest$Region=='MAB'& mtest$variable=="Cha")], type='b',
ylim=c(-1,1), main=paste(i, " GOM"));abline(h=0)
}
for (i in (spp)){
plot(mtest$value[which(mtest$Region=='GBK' & mtest$variable==i)]~
mtest$Time[which(mtest$Region=='MAB'& mtest$variable=="Cha")], type='b',
ylim=c(-1,1), main=paste(i, " GBK"));abline(h=0)
}
for (i in (spp)){
plot(mtest$value[which(mtest$Region=='GBK' & mtest$variable==i)]~
mtest$Time[which(mtest$Region=='GBK'& mtest$variable=="Cha")], type='b',
ylim=c(-1,1), main=paste(i, " GBK"));abline(h=0)
}
for (i in (spp)){
plot(mtest$value[which(mtest$Region=='GB' & mtest$variable==i)]~
mtest$Time[which(mtest$Region=='GB'& mtest$variable=="Cha")], type='b',
ylim=c(-1,1), main=paste(i, " GB"));abline(h=0)
}
t=mtest[which(mtest$Region=="MAB"),]
t2=t[!which(t$variable=="Cf"),]
t2=t[which(!t$variable=="Cf"),]
t3=agggregate(t2, by=Time, FUNCTION=Mean)
t3=dplyr::agggregate(t2, by=Time, FUNCTION=Mean)
library(stats)
t3=agggregate(t2, by=Time, FUNCTION=mean)
t3=agggregate(t2, by="Time", FUNCTION=mean)
t3=aggregate(t2, by="Time", FUNCTION=mean)
t3=aggregate(t2, by="Time", FUN=mean)
t3=aggregate(t2, by=list(Time), FUN=mean)
t3=aggregate(t2, by=list(t2$Time), FUN=mean)
t3=aggregate(t2$value, by=list(t2$Time), FUN=mean)
plot(t3)
plot(t3, type='b')
abline(h)
abline(h=o)
abline(h=0)
t3=aggregate(t2$value, by=list(t2$Time), FUN=sum)
plot(t3, type='b')
t=mtest[which(mtest$Region=="GB"),]
t2=t[which(!t$variable=="Cf"),]
t3=aggregate(t2$value, by=list(t2$Time), FUN=mean)
plot(t3, type='b');abline(h=0)
plot(t3, type='b', main="GB small taxa");abline(h=0)
t=mtest[which(mtest$Region=="GOM"),]
t2=t[which(!t$variable=="Cf"),]
t3=aggregate(t2$value, by=list(t2$Time), FUN=mean)
plot(t3, type='b', main="GOM small taxa");abline(h=0)
t=mtest[which(mtest$Region=="MAB"),]
t2=t[which(!t$variable=="Cf"),]
t3=aggregate(t2$value, by=list(t2$Time), FUN=mean)
plot(t3, type='b',main="MAB small taxa");abline(h=0)
t2=t[which(t$variable=="Cf"),]
t3=aggregate(t2$value, by=list(t2$Time), FUN=mean)
par(new=T)
lines(t3$Group.1, lty=2)
lines(t3$Group.1, lty=2)
par(new=T)
lines(t3$Group.1, lty=2)
lines(t3$Group.1, lty=2, add=T)
lines(t3$x, lty=2, add=T)
lines(t3$x, lty=2)
par(new=T)
lines(t3$x, lty=2)
lines(t3$Group.1, t3$x, lty=2)
lines(t3$Group.1, t3$x, lty=2, col='red')
lines(t3$Group.1, t3$x, lty=1, col='red')
save.image("C:/Users/ryan.morse/Desktop/Iomega Drive Backup 20171012/1 RM/JHare data/EDAB/areawt/20pct/Fall 2019/ws_20200207.RData")
load("C:/Users/ryan.morse/Downloads/survdat_lw.RData")
max(unique(survdat.lw$YEAR))
load("C:/Users/ryan.morse/Downloads/SurvdatBio (3).RData")
max(unique(survdat.bio$YEAR))
load("~/GitHub/JPSS/ws_20190809.RData")
install.packages(c("angstroms", "ncdump"))
max(wod.chl.df$year)
table(wod.chl.df$year)
barplot(table(wod.chl.df$year))
map("worldHires", xlim=c(-77,-65),ylim=c(35,45), fill=T,border=0,col="gray70")
install.packages("chron")
library(raster)
library(mgcv)
# library(sp)
library(maptools)
library(marmap)
library(maps)
library(mapdata)
library(rgeos)
library(ncdf4)
library(abind)
library(RColorBrewer)
library(chron)
map("worldHires", xlim=c(-77,-65),ylim=c(35,45), fill=T,border=0,col="gray70")
map.axes(las=1)
test=wod.chl.df2#[which(wod.chl.df2$epu==limitc),]
points(test@coords, pch=19)
map("worldHires", xlim=c(-77,-65),ylim=c(35,45), fill=T,border=0,col="gray70")
map.axes(las=1)
points(test@coords, pch=19)
lines(NES.shp)
test2=test[which(test@coords %in% NES.shp),]
test2=pointsin(test, NES.shp)
test2=over(test, NES.shp)
test2=over(test@coords, NES.shp)
library(raster)
test2=over(test@coords, NES.shp)
#' Convenience function to transform map projection .
#'
#' Transform `x` to whatever the projection of `to` is.
#' @param x  object to transform
#' @param to object with a map projection
#'
#' @return `x`, transformed
#' @export
#' @importFrom raster projection
#' @importFrom sp spTransform
project_to <- function(x, to) {
spTransform(x, CRS(projection(to)))
}
## devtools::install_github(c("mdsumner/angstroms"))
library(angstroms)
library(rbgm) ## read BGM
library(bgmfiles) ## archive of BGM files
library(raadtools) #devtools::install_github("AustralianAntarcticDivision/raadtools")
library(ncdump)
library(dplyr)
library(ggplot2)
library(geosphere)
complete=tidyr::complete # tidyr masks extract from raster, so just import fn
select=dplyr::select #interference from another package makes this required
'
roms_file='C:/Users/ryan.morse/Desktop/roms/roms2.nc'
roms_file='C:/Users/ryan.morse/Desktop/roms/test/RM_NWA-sz.HCob05T_avg_1980-02-01.nc'
bfile='C:/Users/ryan.morse/Documents/GitHub/atneus_RM/neus_tmerc_RM.bgm'
bgm <- bgmfile(bfile)
## we need the unsullied boxes to identify points inside them
boxes <- boxSpatial(bgm)
library(rgdal)
library(maptools)
library(sp)
wd2='C:/Users/ryan.morse/Documents/GitHub/atneus_RM'
wd2='C:/Users/ryan.morse/Documents/GitHub/atneus_RM/Geometry'
neus.shp=readShapeSpatial(file.path(wd2,'NEUS_Long_Lat.shp')) # this one is in (long, lat format)
neus.shp=rgdal::readOGR(file.path(wd2,'NEUS_Long_Lat.shp'))
neus.shp=rgdal::readOGR(file.path(wd2,'Neus_ll_0p01.shp'))
()
# neus.shp=readShapeSpatial('/home/ryan/Git/atneus_RM/Neus_ll_0p01.shp') # same as BGM file not working with current code
spatialbbox=list()
for (i in 1:length(neus.shp@data$area)){
spatialbbox[[i]]=bbox(neus.shp@polygons[[i]])
}
# get the longitude/latitude arrays
# roms_ll <- romscoords(roms_file, transpose = TRUE)
### added to normalize grid between u and v and rho due to roms cell structure --- update, use u_east & v_north instead they use lat/lon_rho
# roms_ll_u <- romscoords(roms_file, ncdf=F, transpose = T, spatial = c("lon_u", "lat_u"))
# roms_ll_v <- romscoords(roms_file, transpose = F, spatial = c("lon_v", "lat_v"))
roms_ll_rho<- romscoords(roms_file, transpose = TRUE, spatial = c("lon_rho", "lat_rho"))
plot(roms_ll_rho)
#get OCCI v4.2
gribfile='http://rsg.pml.ac.uk/thredds/ncss/CCI_ALL-v4.2-8DAY?var=chlor_a&var=chlor_a_log10_bias&var=chlor_a_log10_rmsd&north=48&west=-76&east=-64&south=35&disableProjSubset=on&horizStride=1&time_start=1997-09-04T00%3A00%3A00Z&time_end=2019-12-27T00%3A00%3A00Z&timeStride=1&addLatLon=true'
download.file(gribfile,'junk.nc',mode = "wb")
load("~/GitHub/JPSS/calibration/WOD/ws.RData")
library(raster)
library(mgcv)
# library(sp)
library(maptools)
library(marmap)
library(maps)
library(mapdata)
library(rgeos)
library(ncdf4)
library(abind)
library(RColorBrewer)
library(chron)
setwd("C:/Users/ryan.morse/Desktop/NES_5area")
nes.five=rgdal::readOGR('nes_gbk_gome_gomw_mabn_mabsPoly.shp')
plot(nes.five)
plot(nes.five[1]
)
plot(nes.five[[1]])
plot(nes.five@polygons)
plot(nes.five$Subpolygon[1])
plot(nes.five$Subpolygon)
nes.five
lines(NES.shp)
lines(nes.five[0], col='red')
lines(nes.five[1], col='green')
plot(NES.shp)
lines(nes.five[[0]], col='red')
nes.five@polygons[[0]]
nes.five@polygons[[1]]
nes.five
nes.five$Primary[1]
nes.five@data$Primary[1]
nes.five@polygons[1]
plot(nes.five@polygons[1], col='red')
plot(nes.five@polygons[1]@coords, col='red')
plot(nes.five@polygons[[1]]@Polygons[[1]]@coords, col='red')
plot(nes.five@polygons[[2]]@Polygons[[2]]@coords, col='red')
plot(nes.five@polygons[[2]]@Polygons[[1]]@coords, col='red')
nes.five@polygons[[2]]
plot(nes.five@polygons[[3]]@Polygons[[1]]@coords, col='red')
plot(nes.five@polygons[[4]]@Polygons[[1]]@coords, col='red')
plot(nes.five@polygons[[5]]@Polygons[[1]]@coords, col='red')
plot(nes.five@polygons[[6]]@Polygons[[1]]@coords, col='red')
w.occi.nes.rmsd=extract_calc(occi.rmsd[[1:1028]], nes.five@polygons[[1]]) #NES
w.occi.nes.rmsd=extract_calc(occi.rmsd[[1:1028]], nes.five) #NES
test=extract(occi.rmsd[[1]], nes.five, fun=mean, df=T) #NES
View(test)
test=extract(occi.rmsd[[1]], nes.five, fun=mean, na.rm=T, df=T) #NES
test=extract(occi.rmsd[[2]], nes.five, fun=mean, na.rm=T, df=T) #NES
test=extract(occi.rmsd[[200]], nes.five, fun=mean, na.rm=T, df=T) #NES
plot(occi.rmsd[[1]])
plot(occi[[1]])
plotChlRaster(occi,1,5)
plotChlRaster(occi,1,5,1)
plotChlRaster(occi,1,5,occi.date$DOY)
w.occi.nes=extract_calc(occi[[1]], nes.five)
View(w.occi.nes)
test=extract(occi.rmsd[[1]], nes.five, fun=mean, na.rm=T, df=T) #NES
test=extract(occi[[1]], nes.five, fun=mean, na.rm=T, df=T) #NES
w.occi.nes=extract_calc(occi[[1:2]], nes.five)
w.occi.nes=extract_calc(occi[[1:1028]], nes.five)
getwd()
save(w.occi.nes, file='extracted_mean_chl.RData')
library(dplyr)
kf.occi=occi.date %>% select(month, day, year, F1, DOY, diff)
kf.occi$nes=w.occi.nes[1,]
kf.occi$gbk=w.occi.nes[2,]
kf.occi$gome=w.occi.nes[3,]
kf.occi$gomw=w.occi.nes[4,]
kf.occi$mabn=w.occi.nes[5,]
kf.occi$mabs=w.occi.nes[6,]
# test=extract(occi[[1]], nes.five, fun=mean, na.rm=T, df=T) #NES
tt=select(kf.occi, month, year, nes) %>% group_by(year) %>% summarise(mean=mean(nes))
plot(tt, type='b', main=paste("NES annual Chl"))
tt.sp=select(kf.occi, month, year, nes) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(nes))
plot(tt.sp, type='b',main=paste("NES Jan-Jun Chl"))
tt.fl=select(kf.occi, month, year, nes) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(nes))
plot(tt.fl, type='b', main=paste("NES Jul-Dec Chl"))
dim(chl.gsm.8d)
# create time series by box for ecomon strata
# m.av=extract_calc(chl.av.8d[[1:1005]], nes.five)
w.gsm.nes=extract_calc(chl.gsm.8d[[1:1005]], nes.five)
save(w.gsm.nes, file='hermes_gsm_extracted_nes.RData')
## add week of year (should be 46 per year for 8-day files)
table(dates.8d$X1)
test=do.call(rbind, strsplit(unlist(av.dates.8d), split="-", fixed=T))
dates.8d=matrix(NA, nrow=length(test[,1]), ncol=3)
dates.8d=data.frame(dates.8d)
dates.8d$X1=as.numeric(substr(test[,1], 1,4)) #YYYY
dates.8d$X2=substr(test[,1], 5,6) #MM
dates.8d$X3=substr(test[,1], 7,8) #DD
dates.8d$Y1=substr(test[,2], 1,4) #YYYY
dates.8d$Y2=substr(test[,2], 5,6) #MM
dates.8d$Y3=substr(test[,2], 7,8) #DD
dates.8d$F1=paste(dates.8d[,1], dates.8d[,2], dates.8d[,3], sep='-')
dates.8d$F2=paste(dates.8d[,4], dates.8d[,5], dates.8d[,6], sep='-')
dates.8d$DOY1=as.numeric(strftime(dates.8d$F1, '%j'))
dates.8d$DOY2=as.numeric(strftime(dates.8d$F2, '%j'))
## add week of year (should be 46 per year for 8-day files)
table(dates.8d$X1)
dates.8d$week=c(seq(from=31, to=46, by=1),  rep(seq(from=1, to=46, by=1), 21), seq(from=1, to=23, by=1))
View(dates.8d)
dates.8d[2,2]
dates.8d$M=as.numeric(dates.8d[,2])
dates.8d$Y=as.numeric(dates.8d[,1])
# m.oc5=extract_calc(chl.oc5[[1:1005]], nes.five)
kf.gsm=dates.8d %>% select(M, Y, DOY1, week, DOY2)
kf.gsm$nes=w.gsm.nes[1,]
kf.gsm$gbk=w.gsm.nes[2,]
kf.gsm$gome=w.gsm.nes[3,]
kf.gsm$gomw=w.gsm.nes[4,]
kf.gsm$mabn=w.gsm.nes[5,]
kf.gsm$mabs=w.gsm.nes[6,]
save(kf.gsm, file="hermes_extracted_gsm.RData")
save(kf.occi, file="occi_extracted_gsm.RData")
tt=select(kf.gsm, month, year, nes) %>% group_by(year) %>% summarise(mean=mean(nes))
plot(tt, type='b', main=paste("NES annual Chl"))
tt=select(kf.gsm, M, Y, nes) %>% group_by(Y) %>% summarise(mean=mean(nes))
plot(tt, type='b', main=paste("GSM NES annual Chl"))
tt.sp=select(kf.gsm, M, Y, nes) %>% filter(M<=6) %>% group_by(Y) %>% summarise(mean=mean(nes))
plot(tt.sp, type='b',main=paste("GSM NES Jan-Jun Chl"))
tt.fl=select(kf.gsm, M, Y, nes) %>% filter(M>6) %>% group_by(Y) %>% summarise(mean=mean(nes))
plot(tt.fl, type='b', main=paste("GSM NES Jul-Dec Chl"))
tt.fl=select(kf.occi, month, year, nes) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(nes))
plot(tt.fl, type='b', main=paste("NES Jul-Dec Chl"))
getwd()
save(kf.gsm, file="hermes_8d_extracted_chl.RData")
save(kf.occi, file="occi_8d_extracted_chl.RData")
lg.gsm.8d=log(chl.gsm.8d)
min(lg.gsm.8d)
min(lg.gsm.8d[[1]], na.rm=T)
min(chl.gsm.8d[[1]], na.rm=T)
min(chl.gsm.8d[[2]], na.rm=T)
cellstats(chl.gsm.8d[[2]], na.rm=T)
cellStats(chl.gsm.8d[[1]])
cellStats(chl.gsm.8d[[1]], min)
cellStats(chl.gsm.8d[[1:100]], min)
lg.gsm.nes=extract_calc(lg.gsm.8d[[1]], nes.five)
View(lg.gsm.nes)
exp(lg.gsm.nes[1,]
)
exp(lg.gsm.nes[,1])
lg.gsm.nes=extract_calc(lg.gsm.8d[[1:1005]], nes.five)
kf.lg.gsm=dates.8d %>% select(M, Y, DOY1, week, DOY2)
kf.lg.gsm$nes=exp(lg.gsm.nes[1,])
kf.lg.gsm$gbk=exp(lg.gsm.nes[2,])
kf.lg.gsm$gome=exp(lg.gsm.nes[3,])
kf.lg.gsm$gomw=exp(lg.gsm.nes[4,])
kf.lg.gsm$mabn=exp(lg.gsm.nes[5,])
kf.lg.gsm$mabs=exp(lg.gsm.nes[6,])
save(kf.lg.gsm, file="hermes_8d_log_aggregate_extracted_chl.RData")
# test=extract(occi[[1]], nes.five, fun=mean, na.rm=T, df=T) #NES
tt=select(kf.occi, month, year, nes) %>% group_by(year) %>% summarise(mean=mean(nes))
plot(tt, type='b', main=paste("NES annual Chl"))
tt=select(kf.gsm, M, Y, nes) %>% group_by(Y) %>% summarise(mean=mean(nes))
plot(tt, type='b', main=paste("GSM NES annual Chl"))
tt=select(kf.lg.gsm, M, Y, nes) %>% group_by(Y) %>% summarise(mean=mean(nes))
plot(tt, type='b', main=paste("GSM log NES annual Chl"))
# test=extract(occi[[1]], nes.five, fun=mean, na.rm=T, df=T) #NES
tt=select(kf.occi, month, year, nes) %>% group_by(year) %>% summarise(mean=mean(nes))
# test=extract(occi[[1]], nes.five, fun=mean, na.rm=T, df=T) #NES
tt=select(kf.occi, month, year, gome) %>% group_by(year) %>% summarise(mean=mean(gome))
plot(tt, type='b', main=paste("GOMe annual Chl"))
# test=extract(occi[[1]], nes.five, fun=mean, na.rm=T, df=T) #NES
tt=select(kf.occi, month, year, gomw) %>% group_by(year) %>% summarise(mean=mean(gomw))
plot(tt, type='b', main=paste("GOMw annual Chl"))
tt=select(occi.date, month, year, GOMchl) %>% group_by(year) %>% summarise(mean=mean(GOMchl))
plot(tt, type='b', main=paste("GOM annual Chl"))
tt.sp=select(occi.date, month, year, GOMchl) %>% filter(month<=6) %>% group_by(year) %>% summarise(mean=mean(GOMchl))
plot(tt.sp, type='b',main=paste("GOM Jan-Jun Chl"))
tt.fl=select(occi.date, month, year, GOMchl) %>% filter(month>6) %>% group_by(year) %>% summarise(mean=mean(GOMchl))
plot(tt.fl, type='b', main=paste("GOM Jul-Dec Chl"))
## plot OCCI for NES, annual, first 6, last 6 months
tt=select(kf.occi, month, year, nes) %>% group_by(year) %>% summarise(mean=mean(nes))
plot(tt, type='b', main=paste("NES annual Chl"))
## plot Hermes GSM for NES, annual, first 6, last 6 months
tt=select(kf.gsm, M, Y, nes) %>% group_by(Y) %>% summarise(mean=mean(nes))
plot(tt, type='b', main=paste("GSM NES annual Chl"))
write.csv(wod.chl.df2, file='WOD_surf_occiv4_2.csv')
